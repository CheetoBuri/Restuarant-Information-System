@startuml
class Customer {
    - customerID: int
    - name: String
    - contact: String
    --
    + createAccount(): void
    + placeOrder(): void
    + viewMenu(): void
    + cancelOrder(): void
}

class Order {
    - orderID: int
    - orderDate: Date
    - status: String
    --
    + addItem(): void
    + removeItem(): void
    + calculateTotal(): double
    + updateStatus(): void
}

class Menu {
    - menuID: int
    - items: List<MenuItem>
    --
    + addItem(): void
    + updateItem(): void
    + deleteItem(): void
    + getAvailableItems(): List<MenuItem>
}

class Waiter {
    - waiterID: int
    - name: String
    --
    + viewOrders(): void
    + updateOrderStatus(): void
    + cancelOrder(): void
}

class Chef {
    - chefID: int
    - name: String
    --
    + viewPendingOrders(): void
    + markAsPrepared(): void
}

class Manager {
    - managerID: int
    - name: String
    --
    + manageMenu(): void
    + manageStaff(): void
    + generateSalesReport(): void
}

class MenuItem {
    - itemID: int
    - name: String
    - price: double
    - description: String
}

' Relationships
Customer --> Order : places
Order --> MenuItem : contains
Waiter --> Order : serves
Chef --> Order : prepares
Manager --> Menu : manages
Menu --> MenuItem : includes
@enduml